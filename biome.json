{
  "$schema": "https://biomejs.dev/schemas/1.9.4/schema.json",
  "vcs": {
    "enabled": false,
    "clientKind": "git",
    "useIgnoreFile": false
  },
  "files": {
    "ignoreUnknown": false,
    "ignore": ["dist/**", "node_modules"]
  },
  "formatter": {
    "enabled": true,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineWidth": 110
  },
  "organizeImports": {
    "enabled": true
  },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "suspicious": {
        "noConsoleLog": "warn",
        "noExplicitAny": "error",
        "useAwait": "error",
        "noUnsafeNegation": "error",
        "noShadowRestrictedNames": "error",
        "useValidTypeof": "error"
      },
      "complexity": {
        "noBannedTypes": "warn",
        "noEmptyTypeParameters": "error",
        "noExcessiveCognitiveComplexity": "warn",
        "noExtraBooleanCast": "error",
        "noForEach": "error",
        "noUselessCatch": "error",
        "noUselessEmptyExport": "error",
        "noUselessRename": "error",
        "noUselessTernary": "warn",
        "useFlatMap": "warn"
      },
      "correctness": {
        "noUnsafeOptionalChaining": "error",
        "noUnusedImports": "error",
        "noUndeclaredVariables": "error",
        "noUnusedVariables": "error",
        "useExhaustiveDependencies": "error",
        "useHookAtTopLevel": "error"
      },
      "nursery": {
        "noDuplicateElseIf": "error",
        "noMissingVarFunction": "error",
        "noDuplicateCustomProperties": "error",
        "noDescendingSpecificity": "error",
        "noDuplicateProperties": "error",
        "noEnum": "error",
        "noNestedTernary": "error",
        "noSecrets": "error",
        "noUnknownTypeSelector": "error"
      },
      "performance": {
        "noBarrelFile": "error"
      },
      "style": {
        "noVar": "error",
        "useConst": "error",
        "useForOf": "error",
        "noUselessElse": "error"
      }
    }
  },
  "javascript": {
    "formatter": {
      "quoteStyle": "double"
    }
  }
}
